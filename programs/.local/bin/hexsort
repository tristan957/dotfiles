#!/usr/bin/env python3

from __future__ import annotations

import argparse
import re
import select
import sys

from typing import cast, TYPE_CHECKING

if TYPE_CHECKING:

    class Args(argparse.Namespace):
        reverse: bool


def error(*args: str) -> None:
    print("hexsort:", *args, file=sys.stderr)


parser = argparse.ArgumentParser()
parser.add_argument(
    "-r",
    "--reverse",
    action="store_true",
    default=False,
    help="reverse sort the values",
)
args = cast("Args", parser.parse_args())

if not select.select([sys.stdin], [], [], 0)[0]:
    error("stdin is empty")
    sys.exit(1)

values = sys.stdin.readlines()
if len(values) == 1:
    values = re.findall(r"((?:0x)?[a-fA-F0-9]+)", values[0])

try:
    values.sort(key=lambda v: int(v, 16), reverse=args.reverse)
except Exception as e:
    error(str(e))
    sys.exit(1)

for v in values:
    print(v)

#!/usr/bin/env python3

from __future__ import annotations

import argparse
import subprocess
import sys

from enum import Enum
from typing import TYPE_CHECKING, cast


class Operation(Enum):
    ERASE = "erase"
    GET = "get"
    STORE = "store"


if TYPE_CHECKING:

    class Args(argparse.Namespace):
        account: str
        item: str
        vault: str
        operation: Operation


parser = argparse.ArgumentParser(description="Bitwarden credential helper for Git.")

parser.add_argument(
    "-a",
    "--account",
    type=str,
    help="account to use",
    default="my.1password.com",
)
parser.add_argument(
    "-v",
    "--vault",
    type=str,
    help="vault to interact with",
    default="Personal",
)
parser.add_argument(
    "item",
    type=str,
    help="item to retrieve",
    required=True,
)
parser.add_argument(
    "operation", type=Operation, help="argument provided by Git (get|store|erase)"
)

args = cast("Args", parser.parse_args())
if args.operation != Operation.GET:
    # We don't care about store or erase at the moment.
    print(f"Ignoring {args.operation} directive. Use 1Password directly.")
    sys.exit(0)

params: dict[str, str] = {}
for line in sys.stdin.readlines():
    parts = line.split("=", maxsplit=1)
    # If we are handed a line like "password=", skip it.
    if not parts[0]:
        continue
    params[parts[0]] = parts[1].rstrip()

if params["protocol"] == "smtp":
    proc = subprocess.run(
        [
            "op",
            "--account",
            args.account,
            "item",
            "get",
            "--vault",
            args.vault,
            args.item,
            "--fields",
            "label=password",
        ],
        check=True,
        encoding="utf-8",
        stdout=subprocess.PIPE,
        stderr=subprocess.DEVNULL,
    )

    proc.check_returncode()

    print(f"password={proc.stdout.strip()}")

sys.exit(0)
